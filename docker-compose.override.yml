services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    volumes:
      # Mount the source code directly into the WORKDIR
      - ./frontend:/app
      # Prevent node_modules from being overwritten by the host volume
      - /app/node_modules # Use the node_modules from the image
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000 (React dev server)
    environment:
      - NODE_ENV=development # Set environment to development
      # Enable polling for file changes (useful in some Docker setups)
      - CHOKIDAR_USEPOLLING=true
    # The CMD ["npm", "start"] is already in Dockerfile.frontend.dev

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    volumes:
      # Mount the source code directly into the WORKDIR
      - ./backend:/usr/src/app
      # Prevent node_modules from being overwritten by the host volume
      - /usr/src/app/node_modules # Use the node_modules from the image
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development # Set environment to development
    # The CMD ["npm", "run", "dev"] is already in Dockerfile.backend.dev

# Networks are inherited from the base docker-compose.yml 